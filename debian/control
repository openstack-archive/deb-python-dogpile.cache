Source: python-dogpile.cache
Section: python
Priority: optional
Maintainer: PKG OpenStack <openstack-devel@lists.alioth.debian.org>
Uploaders: Thomas Goirand <zigo@debian.org>,
Build-Depends: debhelper (>= 9),
               openstack-pkg-tools (>= 52~),
               python-all,
               python-setuptools,
               python-sphinx,
               python3-all,
               python3-setuptools,
Build-Depends-Indep: python-changelog,
                     python-coverage,
                     python-mako,
                     python-mock,
                     python-pytest,
                     python-sphinx-paramlinks,
                     python3-coverage,
                     python3-mako,
                     python3-mock,
                     python3-pytest,
Standards-Version: 3.9.8
Vcs-Browser: https://git.openstack.org/cgit/openstack/deb-python-dogpile.cache?h=debian%2Fnewton
Vcs-Git: https://git.openstack.org/openstack/deb-python-dogpile.cache -b debian/newton
Homepage: https://bitbucket.org/zzzeek/dogpile.cache

Package: python-dogpile.cache
Architecture: all
Depends: ${misc:Depends},
         ${python:Depends},
Recommends: ${python:Recommends},
Breaks: python-dogpile.core (<< 0.6.1-1~),
Replaces: python-dogpile.core (<< 0.6.1-1~),
Description: caching front-end based on the Dogpile lock - Python 2.x
 A caching API built around the concept of a "dogpile lock", which allows
 continued access to an expiring data value while a single thread generates a
 new value.
 .
 dogpile.cache builds on the dogpile.core locking system
 (see http://pypi.python.org/pypi/dogpile.core), which implements the idea of
 "allow one creator to write while others read" in the abstract. Overall,
 dogpile.cache is intended as a replacement to the Beaker (see
 http://beaker.groovie.org) caching system, the internals of which are written
 by the same author. All the ideas of Beaker which "work" are re-implemented in
 dogpile.cache in a more efficient and succinct manner, and all the cruft
 (Beaker's internals were first written in 2005) relegated to the trash heap.
 .
 This package provides the Python 2.x module.

Package: python3-dogpile.cache
Architecture: all
Depends: ${misc:Depends},
         ${python3:Depends},
Recommends: ${python:Recommends},
Breaks: python3-dogpile.core (<< 0.6.1-1~),
Replaces: python3-dogpile.core (<< 0.6.1-1~),
Description: caching front-end based on the Dogpile lock - Python 3.x
 A caching API built around the concept of a "dogpile lock", which allows
 continued access to an expiring data value while a single thread generates a
 new value.
 .
 dogpile.cache builds on the dogpile.core locking system
 (see http://pypi.python.org/pypi/dogpile.core), which implements the idea of
 "allow one creator to write while others read" in the abstract. Overall,
 dogpile.cache is intended as a replacement to the Beaker (see
 http://beaker.groovie.org) caching system, the internals of which are written
 by the same author. All the ideas of Beaker which "work" are re-implemented in
 dogpile.cache in a more efficient and succinct manner, and all the cruft
 (Beaker's internals were first written in 2005) relegated to the trash heap.
 .
 This package provides the Python 3.x module.

Package: python-dogpile.cache-doc
Section: doc
Architecture: all
Depends: ${misc:Depends},
         ${sphinxdoc:Depends},
Description: caching front-end based on the Dogpile lock - doc
 A caching API built around the concept of a "dogpile lock", which allows
 continued access to an expiring data value while a single thread generates a
 new value.
 .
 dogpile.cache builds on the dogpile.core locking system
 (see http://pypi.python.org/pypi/dogpile.core), which implements the idea of
 "allow one creator to write while others read" in the abstract. Overall,
 dogpile.cache is intended as a replacement to the Beaker (see
 http://beaker.groovie.org) caching system, the internals of which are written
 by the same author. All the ideas of Beaker which "work" are re-implemented in
 dogpile.cache in a more efficient and succinct manner, and all the cruft
 (Beaker's internals were first written in 2005) relegated to the trash heap.
 .
 This package provides the documentation.

Package: python-dogpile.core
Architecture: all
Depends: python-dogpile.cache,
         ${misc:Depends},
Description: transitional dummy package for python-dogpile.core
 This transitional package is safe to remove.

Package: python3-dogpile.core
Architecture: all
Depends: python3-dogpile.cache,
         ${misc:Depends},
Description: transitional dummy package for python3-dogpile.core
 This transitional package is safe to remove.
